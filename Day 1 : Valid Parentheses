#Challenge

Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.

_____________________________________________________

#Solution

import java.util.Stack;
import java.util.HashMap;

public class Solution {
    public boolean isValid(String s) {
       
        HashMap<Character, Character> bracketMap = new HashMap<>();
        bracketMap.put(')', '(');
        bracketMap.put('}', '{');
        bracketMap.put(']', '[');

       
        Stack<Character> stack = new Stack<>();

        for (char c : s.toCharArray()) {
          
            if (bracketMap.containsKey(c)) {
                
                char topElement = stack.isEmpty() ? '#' : stack.pop();
               
                if (bracketMap.get(c) != topElement) {
                    return false;
                }
            } else {
             
                stack.push(c);
            }
        }
  
        return stack.isEmpty();
    }

    public static void main(String[] args) {
       
        Solution solution = new Solution();
        System.out.println(solution.isValid("()"));      
        System.out.println(solution.isValid("()[]{}"));   
        System.out.println(solution.isValid("(]"));       
        System.out.println(solution.isValid("([])"));      
    }
}
